"0","directory_path <- ""data/"""
"0","csv_files <- list.files(path = directory_path, pattern = ""\\.csv$"", full.names = TRUE, recursive = TRUE)"
"0",""
"0","column_mapping <- c("
"0","  'time' = 'time',"
"0","  '+/Nck/!SD/nckServoDataActCurr32 [u1; 1]' = 'torque_x',"
"0","  '+/Nck/!SD/nckServoDataActCurr32 [u1; 2]' = 'torque_y',"
"0","  '+/Nck/!SD/nckServoDataActCurr32 [u1; 3]' = 'torque_z',"
"0","  '+/Nck/!SD/nckServoDataActCurr32 [u1; 4]' = 'torque_spindle',"
"0","  #'+/Nck/!SD/nckServoDataActPos2ndEnc32 [u1; 1]' = 'posAx1',"
"0","  #'+/Nck/!SD/nckServoDataActPos2ndEnc32 [u1; 2]' = 'posAx2',"
"0","  #'+/Nck/!SD/nckServoDataActPos2ndEnc32 [u1; 3]' = 'posAx3',"
"0","  #'+/Nck/!SD/nckServoDataActPower32 [u1; 6]' = 'PowerSp',"
"0","  #'+/Nck/!SD/nckServoDataActVelMot32 [u1; 6]' = 'VelMotSp',"
"0","  #'+/Nck/!SD/nckServoDataActVelMot32 [u1; 4]' = 'ActVelMot32',"
"0","  '+/Nck/!SD/nckServoDataActPos1stEnc32 [u1; 1]' = 'position_x',"
"0","  '+/Nck/!SD/nckServoDataActPos1stEnc32 [u1; 2]' = 'position_y',"
"0","  '+/Nck/!SD/nckServoDataActPos1stEnc32 [u1; 3]' = 'position_z',"
"0","  '+/Nck/!SD/nckServoDataActPos1stEnc32 [u1; 4]' = 'position_spindle',    "
"0","  '+/Channel/!RP/rpa [u1; 15]' = 'Recording_flag'"
"0",")"
"0",""
"0","data <- list()"
"0",""
"0","for (file in csv_files){"
"0","    df <- read_csv(file, col_names = TRUE, show_col_types = FALSE)"
"0","    # Obtener nombres de columnas presentes en el archivo y que estÃ¡n en el diccionario"
"0","    columns_to_rename <- intersect(names(df), names(column_mapping))"
"0","    "
"0","    # Renombrar las columnas solo si coinciden con el diccionario"
"0","    if (length(columns_to_rename) > 0) {"
"0","        df <- df %>%"
"0","            rename_with(~ column_mapping[.x], .cols = columns_to_rename)"
"0","    }"
"0","    "
"0","    df$file_path <- file"
"0","    file_path_parts <- str_split(file, ""/"")[[1]]"
"0","    "
"0","    df$file_name <- file_path_parts[length(file_path_parts)]"
"0","    df$file_dir <- file_path_parts[length(file_path_parts) - 1]"
"0","    "
"0","    df$time_increment <- c(0, diff(df$time))"
"0","    data[[file]] <- df"
"0","}"
"2","Warning: Using an external vector in selections was deprecated in tidyselect 1.1.0.
Please use `all_of()` or `any_of()` instead.
# Was:
data %>% select(columns_to_rename)

# Now:
data %>% select(all_of(columns_to_rename))

See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>."
"2","Warning: [38;5;250mOne or more parsing issues, call `problems()` on your data frame for
details, e.g.:
  dat <- vroom(...)
  problems(dat)[39m"
"2","Warning: Unknown or uninitialised column: `time`."
"0","selected_columns <- c(unname(column_mapping), ""file_path"", ""file_dir"","
"0","                      ""file_name"", ""time_increment"")"
"0",""
"0",""
"0","combined_data <- bind_rows(data) %>%"
"0","    select(any_of(selected_columns))"
